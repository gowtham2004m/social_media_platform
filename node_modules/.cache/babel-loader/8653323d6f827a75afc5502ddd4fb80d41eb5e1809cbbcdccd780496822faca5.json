{"ast":null,"code":"var _jsxFileName = \"E:\\\\projects\\\\react_project\\\\react-pro\\\\src\\\\EditPost.js\",\n  _s = $RefreshSig$();\nimport { useContext, useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EditPost = ({\n  posts,\n  handleEdit,\n  editBody,\n  setEditBody,\n  editTitle,\n  setEditTitle\n}) => {\n  _s();\n  const {} = useContext(DataC);\n  const {\n    id\n  } = useParams();\n  const post = posts.find(post => post.id.toString() === id);\n  useEffect(() => {\n    if (post) {\n      setEditTitle(post.title);\n      setEditBody(post.body);\n    }\n  }, [post, setEditBody, setEditTitle]);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"NewPost\",\n    children: editTitle ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Edit Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"newPostForm\",\n        onSubmit: e => e.preventDefault(),\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"postTitle\",\n          children: \"Title:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"postTitle\",\n          type: \"text\",\n          required: true,\n          value: editTitle,\n          onChange: e => setEditTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"postBody\",\n          children: \"Post:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"postBody\",\n          required: true,\n          value: editBody,\n          onChange: e => setEditBody(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          onClick: () => handleEdit(post.id),\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Post Not Found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Well, that's disappointing.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: \"Visit Home Page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(EditPost, \"1EsShrN0/qucOoShpEsJYnyeJ6c=\", false, function () {\n  return [useParams];\n});\n_c = EditPost;\nexport default EditPost;\nvar _c;\n$RefreshReg$(_c, \"EditPost\");","map":{"version":3,"names":["useContext","useEffect","useParams","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","EditPost","posts","handleEdit","editBody","setEditBody","editTitle","setEditTitle","_s","DataC","id","post","find","toString","title","body","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","e","preventDefault","htmlFor","type","required","value","onChange","target","onClick","to","_c","$RefreshReg$"],"sources":["E:/projects/react_project/react-pro/src/EditPost.js"],"sourcesContent":["import { useContext, useEffect } from 'react';\r\nimport { useParams, Link } from 'react-router-dom';\r\n\r\nconst EditPost = ({ posts, handleEdit, editBody, setEditBody, editTitle, setEditTitle }) => {\r\n  const {} = useContext(DataC)\r\n  const { id } = useParams();\r\n  const post = posts.find(post => (post.id).toString() === id);\r\n\r\n  useEffect(() => {\r\n    if (post) {\r\n      setEditTitle(post.title);\r\n      setEditBody(post.body);\r\n    }\r\n  }, [post, setEditBody, setEditTitle]);\r\n\r\n  return (\r\n    <main className=\"NewPost\">\r\n      {editTitle ? (\r\n        <>\r\n          <h2>Edit Post</h2>\r\n          <form className=\"newPostForm\" onSubmit={(e) => e.preventDefault()}>\r\n            <label htmlFor=\"postTitle\">Title:</label>\r\n            <input\r\n              id=\"postTitle\"\r\n              type=\"text\"\r\n              required\r\n              value={editTitle}\r\n              onChange={(e) => setEditTitle(e.target.value)}\r\n            />\r\n            <label htmlFor=\"postBody\">Post:</label>\r\n            <textarea\r\n              id=\"postBody\"\r\n              required\r\n              value={editBody}\r\n              onChange={(e) => setEditBody(e.target.value)}\r\n            />\r\n            <button type=\"submit\" onClick={() => handleEdit(post.id)}>Submit</button>\r\n          </form>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h2>Post Not Found</h2>\r\n          <p>Well, that's disappointing.</p>\r\n          <p>\r\n            <Link to=\"/\">Visit Home Page</Link>\r\n          </p>\r\n        </>\r\n      )}\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default EditPost;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}