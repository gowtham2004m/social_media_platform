{"ast":null,"code":"var _jsxFileName = \"E:\\\\projects\\\\react_project\\\\react-pro\\\\src\\\\EditPost.js\",\n  _s = $RefreshSig$();\nimport { useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EditPost = ({\n  posts,\n  handleEdit,\n  editBody,\n  setEditBody,\n  editTitle,\n  setEditTitle\n}) => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const post = posts.find(post => post.id.toString() === id);\n  useEffect(() => {\n    if (post) {\n      setEditTitle(post.title);\n      setEditBody(post.EditPost);\n    }\n  }, [post, setEditBody, setEditTitle]);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"NewPost\",\n    children: editTitle && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Edit Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"newPostForm\",\n        onSubmit: e => e.preventDefault(),\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"postTitle\",\n          children: \"Title:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"postTitle\",\n          type: \"text\",\n          required: true,\n          value: editTitle,\n          onChange: e => setEditTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"postBody\",\n          children: \"Post: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_s(EditPost, \"WTkzVJt056/9vEFrj9nX40yNcDw=\", false, function () {\n  return [useParams];\n});\n_c = EditPost;\nexport default EditPost;\nvar _c;\n$RefreshReg$(_c, \"EditPost\");","map":{"version":3,"names":["useEffect","useParams","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","EditPost","posts","handleEdit","editBody","setEditBody","editTitle","setEditTitle","_s","id","post","find","toString","title","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","e","preventDefault","htmlFor","type","required","value","onChange","target","_c","$RefreshReg$"],"sources":["E:/projects/react_project/react-pro/src/EditPost.js"],"sourcesContent":["import {useEffect} from 'react'\r\nimport { useParams,Link } from 'react-router-dom'\r\n\r\nconst EditPost = ({posts,handleEdit,editBody,setEditBody,editTitle,setEditTitle}) => {\r\n  const {id} = useParams();\r\n  const post = posts.find(post=>(post.id).toString()===id);\r\n\r\n  useEffect(()=>{\r\n    if(post){\r\n      setEditTitle(post.title);\r\n      setEditBody(post.EditPost);\r\n    }\r\n  },[post,setEditBody,setEditTitle])\r\n\r\n  return (\r\n    <main className=\"NewPost\">\r\n      {\r\n        editTitle &&\r\n        <>\r\n          <h2>Edit Post</h2>\r\n          <form className=\"newPostForm\" onSubmit={(e) => e.preventDefault()}>\r\n              <label\r\n                htmlFor =\"postTitle\">Title:\r\n              </label>\r\n                <input\r\n                  id=\"postTitle\"\r\n                  type=\"text\"\r\n                  required\r\n                  value={editTitle}\r\n                  onChange={(e)=>\r\n                  setEditTitle(e.target.value)}\r\n                />\r\n              <label\r\n              htmlFor=\"postBody\">Post: </label>\r\n          </form>\r\n        </>\r\n      }\r\n\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default EditPost\r\n"],"mappings":";;AAAA,SAAQA,SAAS,QAAO,OAAO;AAC/B,SAASC,SAAS,EAACC,IAAI,QAAQ,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEjD,MAAMC,QAAQ,GAAGA,CAAC;EAACC,KAAK;EAACC,UAAU;EAACC,QAAQ;EAACC,WAAW;EAACC,SAAS;EAACC;AAAY,CAAC,KAAK;EAAAC,EAAA;EACnF,MAAM;IAACC;EAAE,CAAC,GAAGd,SAAS,CAAC,CAAC;EACxB,MAAMe,IAAI,GAAGR,KAAK,CAACS,IAAI,CAACD,IAAI,IAAGA,IAAI,CAACD,EAAE,CAAEG,QAAQ,CAAC,CAAC,KAAGH,EAAE,CAAC;EAExDf,SAAS,CAAC,MAAI;IACZ,IAAGgB,IAAI,EAAC;MACNH,YAAY,CAACG,IAAI,CAACG,KAAK,CAAC;MACxBR,WAAW,CAACK,IAAI,CAACT,QAAQ,CAAC;IAC5B;EACF,CAAC,EAAC,CAACS,IAAI,EAACL,WAAW,EAACE,YAAY,CAAC,CAAC;EAElC,oBACET,OAAA;IAAMgB,SAAS,EAAC,SAAS;IAAAC,QAAA,EAErBT,SAAS,iBACTR,OAAA,CAAAE,SAAA;MAAAe,QAAA,gBACEjB,OAAA;QAAAiB,QAAA,EAAI;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAClBrB,OAAA;QAAMgB,SAAS,EAAC,aAAa;QAACM,QAAQ,EAAGC,CAAC,IAAKA,CAAC,CAACC,cAAc,CAAC,CAAE;QAAAP,QAAA,gBAC9DjB,OAAA;UACEyB,OAAO,EAAE,WAAW;UAAAR,QAAA,EAAC;QACvB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACNrB,OAAA;UACEW,EAAE,EAAC,WAAW;UACde,IAAI,EAAC,MAAM;UACXC,QAAQ;UACRC,KAAK,EAAEpB,SAAU;UACjBqB,QAAQ,EAAGN,CAAC,IACZd,YAAY,CAACc,CAAC,CAACO,MAAM,CAACF,KAAK;QAAE;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9B,CAAC,eACJrB,OAAA;UACAyB,OAAO,EAAC,UAAU;UAAAR,QAAA,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/B,CAAC;IAAA,eACP;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAGD,CAAC;AAEX,CAAC;AAAAX,EAAA,CArCKP,QAAQ;EAAA,QACCN,SAAS;AAAA;AAAAkC,EAAA,GADlB5B,QAAQ;AAuCd,eAAeA,QAAQ;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}